import random

def avgAbsError(individual, dataframe, forecast, toolbox):
    
    # Transform the tree expression in a callable function
    func = toolbox.compile(expr=individual)
    
    # Evaluate the mean squared error between the expression and the real function
    AvgAbsError = [abs(func(*dataframe.iloc[nrow]) - forecast[nrow]) for nrow in range(len(dataframe))]

    return sum(AvgAbsError) / len(AvgAbsError),

def MSE(individual, dataframe, forecast): 
    
    # Transform the tree expression in a callable function
    func = base.toolbox.compile(expr=individual)
    
    # Evaluate the mean squared error between the expression and the real function
    sqerrors = [(func(*slow_wind.iloc[nrow]) - forecast[nrow])**2 for nrow in random.sample(range(len(slow_wind)),       int(len(slow_wind)/3))]
    
    return sum(sqerrors) / len(sqerrors),